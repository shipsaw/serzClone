!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFSIZE	serz.c	10;"	d	file:
ElemClose	serz.c	/^enum elType {ElemOpen, ElemClose, Other};$/;"	e	enum:elType	file:
ElemOpen	serz.c	/^enum elType {ElemOpen, ElemClose, Other};$/;"	e	enum:elType	file:
INTFROM5CHARS	yxml.c	116;"	d	file:
MAP_H	map.h	9;"	d
MAP_VERSION	map.h	13;"	d
Other	serz.c	/^enum elType {ElemOpen, ElemClose, Other};$/;"	e	enum:elType	file:
WriteFF41	serz.c	/^void WriteFF41(yxml_t* x, size_t nameLen, char *attrVal, int numElems) {$/;"	f
WriteFF50	serz.c	/^void WriteFF50(yxml_t* x, size_t nameLen, char *attrVal) {$/;"	f
WriteFF50Void	serz.c	/^void WriteFF50Void(char* lastName) {$/;"	f
WriteFF56	serz.c	/^void WriteFF56(yxml_t* x, size_t nameLen, char *attrVal) {$/;"	f
WriteFF70	serz.c	/^void WriteFF70(yxml_t* x) {$/;"	f
WritePrelude	serz.c	/^void WritePrelude() {$/;"	f
YXMLS_attr0	yxml.c	/^	YXMLS_attr0,$/;"	e	enum:__anon1	file:
YXMLS_attr1	yxml.c	/^	YXMLS_attr1,$/;"	e	enum:__anon1	file:
YXMLS_attr2	yxml.c	/^	YXMLS_attr2,$/;"	e	enum:__anon1	file:
YXMLS_attr3	yxml.c	/^	YXMLS_attr3,$/;"	e	enum:__anon1	file:
YXMLS_attr4	yxml.c	/^	YXMLS_attr4,$/;"	e	enum:__anon1	file:
YXMLS_cd0	yxml.c	/^	YXMLS_cd0,$/;"	e	enum:__anon1	file:
YXMLS_cd1	yxml.c	/^	YXMLS_cd1,$/;"	e	enum:__anon1	file:
YXMLS_cd2	yxml.c	/^	YXMLS_cd2,$/;"	e	enum:__anon1	file:
YXMLS_comment0	yxml.c	/^	YXMLS_comment0,$/;"	e	enum:__anon1	file:
YXMLS_comment1	yxml.c	/^	YXMLS_comment1,$/;"	e	enum:__anon1	file:
YXMLS_comment2	yxml.c	/^	YXMLS_comment2,$/;"	e	enum:__anon1	file:
YXMLS_comment3	yxml.c	/^	YXMLS_comment3,$/;"	e	enum:__anon1	file:
YXMLS_comment4	yxml.c	/^	YXMLS_comment4,$/;"	e	enum:__anon1	file:
YXMLS_dt0	yxml.c	/^	YXMLS_dt0,$/;"	e	enum:__anon1	file:
YXMLS_dt1	yxml.c	/^	YXMLS_dt1,$/;"	e	enum:__anon1	file:
YXMLS_dt2	yxml.c	/^	YXMLS_dt2,$/;"	e	enum:__anon1	file:
YXMLS_dt3	yxml.c	/^	YXMLS_dt3,$/;"	e	enum:__anon1	file:
YXMLS_dt4	yxml.c	/^	YXMLS_dt4,$/;"	e	enum:__anon1	file:
YXMLS_elem0	yxml.c	/^	YXMLS_elem0,$/;"	e	enum:__anon1	file:
YXMLS_elem1	yxml.c	/^	YXMLS_elem1,$/;"	e	enum:__anon1	file:
YXMLS_elem2	yxml.c	/^	YXMLS_elem2,$/;"	e	enum:__anon1	file:
YXMLS_elem3	yxml.c	/^	YXMLS_elem3,$/;"	e	enum:__anon1	file:
YXMLS_enc0	yxml.c	/^	YXMLS_enc0,$/;"	e	enum:__anon1	file:
YXMLS_enc1	yxml.c	/^	YXMLS_enc1,$/;"	e	enum:__anon1	file:
YXMLS_enc2	yxml.c	/^	YXMLS_enc2,$/;"	e	enum:__anon1	file:
YXMLS_enc3	yxml.c	/^	YXMLS_enc3,$/;"	e	enum:__anon1	file:
YXMLS_etag0	yxml.c	/^	YXMLS_etag0,$/;"	e	enum:__anon1	file:
YXMLS_etag1	yxml.c	/^	YXMLS_etag1,$/;"	e	enum:__anon1	file:
YXMLS_etag2	yxml.c	/^	YXMLS_etag2,$/;"	e	enum:__anon1	file:
YXMLS_init	yxml.c	/^	YXMLS_init,$/;"	e	enum:__anon1	file:
YXMLS_le0	yxml.c	/^	YXMLS_le0,$/;"	e	enum:__anon1	file:
YXMLS_le1	yxml.c	/^	YXMLS_le1,$/;"	e	enum:__anon1	file:
YXMLS_le2	yxml.c	/^	YXMLS_le2,$/;"	e	enum:__anon1	file:
YXMLS_le3	yxml.c	/^	YXMLS_le3,$/;"	e	enum:__anon1	file:
YXMLS_lee1	yxml.c	/^	YXMLS_lee1,$/;"	e	enum:__anon1	file:
YXMLS_lee2	yxml.c	/^	YXMLS_lee2,$/;"	e	enum:__anon1	file:
YXMLS_leq0	yxml.c	/^	YXMLS_leq0,$/;"	e	enum:__anon1	file:
YXMLS_misc0	yxml.c	/^	YXMLS_misc0,$/;"	e	enum:__anon1	file:
YXMLS_misc1	yxml.c	/^	YXMLS_misc1,$/;"	e	enum:__anon1	file:
YXMLS_misc2	yxml.c	/^	YXMLS_misc2,$/;"	e	enum:__anon1	file:
YXMLS_misc2a	yxml.c	/^	YXMLS_misc2a,$/;"	e	enum:__anon1	file:
YXMLS_misc3	yxml.c	/^	YXMLS_misc3,$/;"	e	enum:__anon1	file:
YXMLS_pi0	yxml.c	/^	YXMLS_pi0,$/;"	e	enum:__anon1	file:
YXMLS_pi1	yxml.c	/^	YXMLS_pi1,$/;"	e	enum:__anon1	file:
YXMLS_pi2	yxml.c	/^	YXMLS_pi2,$/;"	e	enum:__anon1	file:
YXMLS_pi3	yxml.c	/^	YXMLS_pi3,$/;"	e	enum:__anon1	file:
YXMLS_pi4	yxml.c	/^	YXMLS_pi4,$/;"	e	enum:__anon1	file:
YXMLS_std0	yxml.c	/^	YXMLS_std0,$/;"	e	enum:__anon1	file:
YXMLS_std1	yxml.c	/^	YXMLS_std1,$/;"	e	enum:__anon1	file:
YXMLS_std2	yxml.c	/^	YXMLS_std2,$/;"	e	enum:__anon1	file:
YXMLS_std3	yxml.c	/^	YXMLS_std3,$/;"	e	enum:__anon1	file:
YXMLS_string	yxml.c	/^	YXMLS_string,$/;"	e	enum:__anon1	file:
YXMLS_ver0	yxml.c	/^	YXMLS_ver0,$/;"	e	enum:__anon1	file:
YXMLS_ver1	yxml.c	/^	YXMLS_ver1,$/;"	e	enum:__anon1	file:
YXMLS_ver2	yxml.c	/^	YXMLS_ver2,$/;"	e	enum:__anon1	file:
YXMLS_ver3	yxml.c	/^	YXMLS_ver3,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl0	yxml.c	/^	YXMLS_xmldecl0,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl1	yxml.c	/^	YXMLS_xmldecl1,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl2	yxml.c	/^	YXMLS_xmldecl2,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl3	yxml.c	/^	YXMLS_xmldecl3,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl4	yxml.c	/^	YXMLS_xmldecl4,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl5	yxml.c	/^	YXMLS_xmldecl5,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl6	yxml.c	/^	YXMLS_xmldecl6,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl7	yxml.c	/^	YXMLS_xmldecl7,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl8	yxml.c	/^	YXMLS_xmldecl8,$/;"	e	enum:__anon1	file:
YXMLS_xmldecl9	yxml.c	/^	YXMLS_xmldecl9$/;"	e	enum:__anon1	file:
YXML_ATTREND	yxml.h	/^	YXML_ATTREND     =  6, \/* End of attribute       '.."'               *\/$/;"	e	enum:__anon6
YXML_ATTRSTART	yxml.h	/^	YXML_ATTRSTART   =  4, \/* Attribute:             'Name=..'           *\/$/;"	e	enum:__anon6
YXML_ATTRVAL	yxml.h	/^	YXML_ATTRVAL     =  5, \/* Attribute value                            *\/$/;"	e	enum:__anon6
YXML_CONTENT	yxml.h	/^	YXML_CONTENT     =  2, \/* Element content                            *\/$/;"	e	enum:__anon6
YXML_ECLOSE	yxml.h	/^	YXML_ECLOSE      = -3, \/* Close tag does not match open tag (<Tag> .. <\/OtherTag>) *\/$/;"	e	enum:__anon6
YXML_EEOF	yxml.h	/^	YXML_EEOF        = -5, \/* Unexpected EOF                             *\/$/;"	e	enum:__anon6
YXML_ELEMEND	yxml.h	/^	YXML_ELEMEND     =  3, \/* End of an element:     '.. \/>' or '<\/Tag>' *\/$/;"	e	enum:__anon6
YXML_ELEMSTART	yxml.h	/^	YXML_ELEMSTART   =  1, \/* Start of an element:   '<Tag ..'           *\/$/;"	e	enum:__anon6
YXML_EREF	yxml.h	/^	YXML_EREF        = -4, \/* Invalid character or entity reference (&whatever;) *\/$/;"	e	enum:__anon6
YXML_ESTACK	yxml.h	/^	YXML_ESTACK      = -2, \/* Stack overflow (too deeply nested tags or too long element\/attribute name) *\/$/;"	e	enum:__anon6
YXML_ESYN	yxml.h	/^	YXML_ESYN        = -1, \/* Syntax error (unexpected byte)             *\/$/;"	e	enum:__anon6
YXML_H	yxml.h	24;"	d
YXML_OK	yxml.h	/^	YXML_OK          =  0, \/* Character consumed, no new token present   *\/$/;"	e	enum:__anon6
YXML_PICONTENT	yxml.h	/^	YXML_PICONTENT   =  8, \/* Content of a PI                            *\/$/;"	e	enum:__anon6
YXML_PIEND	yxml.h	/^	YXML_PIEND       =  9  \/* End of a processing instruction            *\/$/;"	e	enum:__anon6
YXML_PISTART	yxml.h	/^	YXML_PISTART     =  7, \/* Start of a processing instruction          *\/$/;"	e	enum:__anon6
attr	yxml.h	/^	char *attr;$/;"	m	struct:__anon7
boolean	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	e	enum:contType	file:
bucketidx	map.h	/^  unsigned bucketidx;$/;"	m	struct:__anon5
buckets	map.h	/^  map_node_t **buckets;$/;"	m	struct:__anon4
byte	yxml.h	/^	uint64_t byte;$/;"	m	struct:__anon7
cDeltaString	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	e	enum:contType	file:
checkMap	serz.c	/^uint16_t checkMap(char* symbol, size_t length) {$/;"	f
children	serz.c	/^	uint32_t children; 	\/\/ uint32 because that's the format it is written in the bin file$/;"	m	struct:__anon2	file:
childrenAdd	serz.c	/^	long childrenAdd;  	\/\/ long based on the type of bufsize$/;"	m	struct:__anon2	file:
contType	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	g	file:
contWrite	serz.c	/^void contWrite(char* content, enum contType type, int count) {$/;"	f
contentType	serz.c	/^enum contType contentType(char* type) {$/;"	f
data	yxml.h	/^	char data[8];$/;"	m	struct:__anon7
elType	serz.c	/^enum elType {ElemOpen, ElemClose, Other};$/;"	g	file:
elem	yxml.h	/^	char *elem;$/;"	m	struct:__anon7
hash	map.c	/^  unsigned hash;$/;"	m	struct:map_node_t	file:
ignore	yxml.h	/^	unsigned ignore;$/;"	m	struct:__anon7
index	serz.c	/^	uint16_t index;		\/\/ Does double duty as array index and FF70 return address$/;"	m	struct:__anon3	file:
inline	yxml.h	30;"	d
line	yxml.h	/^	uint32_t line;$/;"	m	struct:__anon7
main	serz.c	/^int main () {$/;"	f
mapId	serz.c	/^	uint16_t mapId;		\/\/ Id value of element name, used when calling FF 70$/;"	m	struct:__anon2	file:
map_addnode	map.c	/^static void map_addnode(map_base_t *m, map_node_t *node) {$/;"	f	file:
map_base_t	map.h	/^} map_base_t;$/;"	t	typeref:struct:__anon4
map_bucketidx	map.c	/^static int map_bucketidx(map_base_t *m, unsigned hash) {$/;"	f	file:
map_char_t	map.h	/^typedef map_t(char) map_char_t;$/;"	t
map_deinit	map.h	37;"	d
map_deinit_	map.c	/^void map_deinit_(map_base_t *m) {$/;"	f
map_double_t	map.h	/^typedef map_t(double) map_double_t;$/;"	t
map_float_t	map.h	/^typedef map_t(float) map_float_t;$/;"	t
map_get	map.h	41;"	d
map_get_	map.c	/^void *map_get_(map_base_t *m, const char *key) {$/;"	f
map_getref	map.c	/^static map_node_t **map_getref(map_base_t *m, const char *key) {$/;"	f	file:
map_hash	map.c	/^static unsigned map_hash(const char *str) {$/;"	f	file:
map_init	map.h	33;"	d
map_int_t	map.h	/^typedef map_t(int) map_int_t;$/;"	t
map_iter	map.h	54;"	d
map_iter_	map.c	/^map_iter_t map_iter_(void) {$/;"	f
map_iter_t	map.h	/^} map_iter_t;$/;"	t	typeref:struct:__anon5
map_newnode	map.c	/^static map_node_t *map_newnode(const char *key, void *value, int vsize) {$/;"	f	file:
map_next	map.h	58;"	d
map_next_	map.c	/^const char *map_next_(map_base_t *m, map_iter_t *iter) {$/;"	f
map_node_t	map.c	/^struct map_node_t {$/;"	s	file:
map_node_t	map.h	/^typedef struct map_node_t map_node_t;$/;"	t	typeref:struct:map_node_t
map_remove	map.h	50;"	d
map_remove_	map.c	/^void map_remove_(map_base_t *m, const char *key) {$/;"	f
map_resize	map.c	/^static int map_resize(map_base_t *m, int nbuckets) {$/;"	f	file:
map_set	map.h	45;"	d
map_set_	map.c	/^int map_set_(map_base_t *m, const char *key, void *value, int vsize) {$/;"	f
map_str_t	map.h	/^typedef map_t(char*) map_str_t;$/;"	t
map_t	map.h	29;"	d
map_void_t	map.h	/^typedef map_t(void*) map_void_t;$/;"	t
nbuckets	map.h	/^  unsigned nbuckets, nnodes;$/;"	m	struct:__anon4
next	map.c	/^  map_node_t *next;$/;"	m	struct:map_node_t	file:
nextstate	yxml.h	/^	int nextstate; \/* Used for '@' state remembering and for the "string" consuming state *\/$/;"	m	struct:__anon7
nnodes	map.h	/^  unsigned nbuckets, nnodes;$/;"	m	struct:__anon4
node	map.h	/^  map_node_t *node;$/;"	m	struct:__anon5
outFile	serz.c	/^FILE *outFile, *xmlDoc; \/\/ binary file$/;"	v
pi	yxml.h	/^	char *pi;$/;"	m	struct:__anon7
quote	yxml.h	/^	unsigned quote;$/;"	m	struct:__anon7
readXML	serz.c	/^char* readXML(char* source) {$/;"	f
record	serz.c	/^} record;$/;"	t	typeref:struct:__anon2	file:
recordArr	serz.c	/^} recordArr;$/;"	t	typeref:struct:__anon3	file:
records	serz.c	/^	record records[30];$/;"	m	struct:__anon3	file:
records	serz.c	/^recordArr records;$/;"	v
reflen	yxml.h	/^	unsigned reflen;$/;"	m	struct:__anon7
sFloat32	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	e	enum:contType	file:
sInt32	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	e	enum:contType	file:
sUInt64	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	e	enum:contType	file:
sUInt8	serz.c	/^enum contType {boolean, sUInt8, sInt32, sFloat32, sUInt64, cDeltaString};$/;"	e	enum:contType	file:
stack	yxml.h	/^	unsigned char *stack; \/* Stack of element names + attribute\/PI name, separated by \\0. Also starts with a \\0. *\/$/;"	m	struct:__anon7
stacklen	yxml.h	/^	size_t stacksize, stacklen;$/;"	m	struct:__anon7
stacksize	yxml.h	/^	size_t stacksize, stacklen;$/;"	m	struct:__anon7
state	yxml.h	/^	int state;$/;"	m	struct:__anon7
string	yxml.h	/^	unsigned char *string;$/;"	m	struct:__anon7
symMap	serz.c	/^map_int_t symMap; \/\/ symbol map$/;"	v
total	yxml.h	/^	uint64_t total;$/;"	m	struct:__anon7
value	map.c	/^  void *value;$/;"	m	struct:map_node_t	file:
xmlDoc	serz.c	/^FILE *outFile, *xmlDoc; \/\/ binary file$/;"	v
yxml_attrname	yxml.c	/^static inline yxml_ret_t yxml_attrname   (yxml_t *x, unsigned ch) { return yxml_pushstackc(x, ch); }$/;"	f	file:
yxml_attrnameend	yxml.c	/^static inline yxml_ret_t yxml_attrnameend(yxml_t *x, unsigned ch) { return YXML_ATTRSTART; }$/;"	f	file:
yxml_attrstart	yxml.c	/^static inline yxml_ret_t yxml_attrstart  (yxml_t *x, unsigned ch) { return yxml_pushstack(x, &x->attr, ch); }$/;"	f	file:
yxml_attrvalend	yxml.c	/^static inline yxml_ret_t yxml_attrvalend (yxml_t *x, unsigned ch) { yxml_popstack(x); return YXML_ATTREND; }$/;"	f	file:
yxml_dataattr	yxml.c	/^static inline yxml_ret_t yxml_dataattr(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_datacd1	yxml.c	/^static inline yxml_ret_t yxml_datacd1(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_datacd2	yxml.c	/^static inline yxml_ret_t yxml_datacd2(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_datacontent	yxml.c	/^static inline yxml_ret_t yxml_datacontent(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_datapi1	yxml.c	/^static inline yxml_ret_t yxml_datapi1(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_datapi2	yxml.c	/^static inline yxml_ret_t yxml_datapi2(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_elemclose	yxml.c	/^static inline yxml_ret_t yxml_elemclose(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_elemcloseend	yxml.c	/^static inline yxml_ret_t yxml_elemcloseend(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_elemname	yxml.c	/^static inline yxml_ret_t yxml_elemname   (yxml_t *x, unsigned ch) { return yxml_pushstackc(x, ch); }$/;"	f	file:
yxml_elemnameend	yxml.c	/^static inline yxml_ret_t yxml_elemnameend(yxml_t *x, unsigned ch) { return YXML_ELEMSTART; }$/;"	f	file:
yxml_elemstart	yxml.c	/^static inline yxml_ret_t yxml_elemstart  (yxml_t *x, unsigned ch) { return yxml_pushstack(x, &x->elem, ch); }$/;"	f	file:
yxml_eof	yxml.c	/^yxml_ret_t yxml_eof(yxml_t *x) {$/;"	f
yxml_init	yxml.c	/^void yxml_init(yxml_t *x, void *stack, size_t stacksize) {$/;"	f
yxml_isAlpha	yxml.c	103;"	d	file:
yxml_isAttValue	yxml.c	110;"	d	file:
yxml_isChar	yxml.c	100;"	d	file:
yxml_isEncName	yxml.c	106;"	d	file:
yxml_isHex	yxml.c	105;"	d	file:
yxml_isName	yxml.c	108;"	d	file:
yxml_isNameStart	yxml.c	107;"	d	file:
yxml_isNum	yxml.c	104;"	d	file:
yxml_isRef	yxml.c	114;"	d	file:
yxml_isSP	yxml.c	102;"	d	file:
yxml_parse	yxml.c	/^yxml_ret_t yxml_parse(yxml_t *x, int _ch) {$/;"	f
yxml_piabort	yxml.c	/^static inline yxml_ret_t yxml_piabort  (yxml_t *x, unsigned ch) { yxml_popstack(x); return YXML_OK; }$/;"	f	file:
yxml_piname	yxml.c	/^static inline yxml_ret_t yxml_piname   (yxml_t *x, unsigned ch) { return yxml_pushstackc(x, ch); }$/;"	f	file:
yxml_pinameend	yxml.c	/^static inline yxml_ret_t yxml_pinameend(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_pistart	yxml.c	/^static inline yxml_ret_t yxml_pistart  (yxml_t *x, unsigned ch) { return yxml_pushstack(x, &x->pi, ch); }$/;"	f	file:
yxml_pivalend	yxml.c	/^static inline yxml_ret_t yxml_pivalend (yxml_t *x, unsigned ch) { yxml_popstack(x); x->pi = (char *)x->stack; return YXML_PIEND; }$/;"	f	file:
yxml_popstack	yxml.c	/^static void yxml_popstack(yxml_t *x) {$/;"	f	file:
yxml_pushstack	yxml.c	/^static yxml_ret_t yxml_pushstack(yxml_t *x, char **res, unsigned ch) {$/;"	f	file:
yxml_pushstackc	yxml.c	/^static yxml_ret_t yxml_pushstackc(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_ref	yxml.c	/^static yxml_ret_t yxml_ref(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_refattrval	yxml.c	/^static inline yxml_ret_t yxml_refattrval(yxml_t *x, unsigned ch) { return yxml_refend(x, YXML_ATTRVAL); }$/;"	f	file:
yxml_refcontent	yxml.c	/^static inline yxml_ret_t yxml_refcontent(yxml_t *x, unsigned ch) { return yxml_refend(x, YXML_CONTENT); }$/;"	f	file:
yxml_refend	yxml.c	/^static yxml_ret_t yxml_refend(yxml_t *x, yxml_ret_t ret) {$/;"	f	file:
yxml_refstart	yxml.c	/^static inline yxml_ret_t yxml_refstart(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_ret_t	yxml.h	/^} yxml_ret_t;$/;"	t	typeref:enum:__anon6
yxml_selfclose	yxml.c	/^static yxml_ret_t yxml_selfclose(yxml_t *x, unsigned ch) {$/;"	f	file:
yxml_setchar	yxml.c	/^static inline void yxml_setchar(char *dest, unsigned ch) {$/;"	f	file:
yxml_setutf8	yxml.c	/^static void yxml_setutf8(char *dest, unsigned ch) {$/;"	f	file:
yxml_state_t	yxml.c	/^} yxml_state_t;$/;"	t	typeref:enum:__anon1	file:
yxml_symlen	yxml.h	/^static inline size_t yxml_symlen(yxml_t *x, const char *s) {$/;"	f
yxml_t	yxml.h	/^} yxml_t;$/;"	t	typeref:struct:__anon7
